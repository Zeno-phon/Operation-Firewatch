Drones System

Creates and manages drones, their movement, fuel, health, and the detection of fires.

Zen_OF_FindDroneRoute

Computes a set of paths from (1) to (2), sorted by cost.
NOTE - Current pathfinding algorithm is incomplete.
Usage : Call
Params: 1. String, drone id
        2. Array, group, object, string, the start
        3. Array, group, object, string, the end
Return: Array
            1. Array of Arrays, a list of positions
            N. ...

Zen_OF_FindDroneRouteData

Computes path information for the current route of (1).  Returns
as many nested arrays as there are waypoints.
Usage : Call
Params: 1. String, drone id
 (opt.) 2. Scalar, the index of the path, (default: Current Path)
Return: Array
            1. Array
                1. Scalar, distance between two points
                2. Scalar, ETA in seconds between two points
                3. Scalar, fuel fraction remaining at second point
            N. ...

Zen_OF_FindFire

Returns all fires within 1000m of (1).
Usage : Call
Params: 1. String, drone id
Return: Array
            1. String, fire id
            2. Array, fire average position

Zen_OF_GetDroneData

Returns all data of (1).  Must be run local to the client
that manages this drone.
Usage : Call
Params: 1. String, drone identifier
Return: Array
            1. String, drone identifier
            2. Object, drone
            3. Scalar, sensor health, 0 to 1
            4. Scalar, fuel, 0 to 1
            5. Script handle, drone orders thread
            6. Array of strings, known zones
            7. String, drone's map marker
            8. Array of arrays, pathfinding solutions
            9. Array of markers, current path markers
            10. Scalar, current path index
            11. Array, RTB values from Zen_OF_OrderDroneExecuteRoute
            12. Script handle, drone GUI event thread
            13. Script handle, drone GUI auto confirm countdown
            14. Scalar, time that the auto confirm countdown started
            15. Script handle, drone orbit thread
            16. Array of strings, waypoint types
            17. Array of strings, permitted zones

Zen_OF_InvokeDrone

Creates a new drone of type (2) at (1).  Must be run local to the client
that will manage this drone.
Usage : Call
Params: 1. Array, group, object, string, the spawn position
        2. String, drone classname
Return: String, drone identifier

Zen_OF_OrderDroneExecuteRoute

Orders (1) to move through all (2) in order.  If (3), makes (1) repair and
refuel at (4), assuming (4) is at the end of (2).
Usage : Spawn
Params: 1. String, drone id
        2. Array of positions, waypoints
 (opt.) 3. Boolean, true if this is an RTB order, (default: false)
 (opt.) 4. String, repair and refuel identifier, (default: '')
Return: Void

Zen_OF_OrderDroneOrbit

Orders (1) to move in a circular orbit of (2) at radius (3) forever.
Usage : Spawn
Params: 1. String, drone id
        2. Array, group, object, string, the center
        3. Scalar, the radius
Return: Void

Zen_OF_UpdateDrone

Sets the data of (1) to (2,5).  Must be run local to the client
that will manage this drone.  Use '' to skip (2,5) and (7,15), and 0 to skip (6).
Usage : Call
Params: 1. String, drone identifier
        2. Scalar, sensor health
 (opt.) 3. Scalar, fuel, (default: '')
 (opt.) 4. Script handle, the drone's order thread, (default: '')
 (opt.) 5. Array of strings, known zones, (default: '')
 (opt.) 6. String, the drone's map marker, (default: 0)
 (opt.) 7. Array of arrays, pathfinding solutions, (default: '')
 (opt.) 8. Array of markers, current path markers, (default: '')
 (opt.) 9. Scalar, current path index, (default: '')
 (opt.) 10. Array, RTB values from Zen_OF_OrderDroneExecuteRoute, (default: '')
 (opt.) 11. Script handle, drone GUI event thread, (default: '')
 (opt.) 12. Script handle, drone GUI auto confirm countdown, (default: '')
 (opt.) 13. Scalar, time that the auto confirm countdown started, (default: '')
 (opt.) 14. Script handle, drone orders thread, (default: '')
 (opt.) 15. Array of strings, waypoint types, (default: '')
 (opt.) 16. Array of strings, permitted zones, (default: '')
Return: Void
