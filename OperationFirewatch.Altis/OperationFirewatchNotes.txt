////////////////////////////////////////////////
// Drones
////////////////////////////////////////////////
// Data
    // String, a unique identifier
    // Object, the in-game object
    // Scalar, sensor health
    // Scalar, fuel remaining
    // Script handle, the current drone order thread
    // Array of strings, zones known to the drone
    // String, marker on drone
    // Array of arrays, path solutions
    // Array of string, path markers
    // Scalar, current path

// Zen_OF_InvokeDrone
// Zen_OF_GetDroneData
// Zen_OF_UpdateDrone
// Zen_OF_OrderDroneExecuteRoute

Zen_OF_FindDroneRoute
    // get end point from user
    apply Dijkstra's algorithm (https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm)
    use dynamic graph generated in X/Y steps with weighted mult on the distance for ABC zones
    define a tolerance and keep multiple solutions
    cull points along straight lines
    cull 90 deg turns to diag OR have diag + sqr grid (second nearest neighbors)

Zen_OF_FindFire
    use fire object geometry to evaluate probability of detection

// Zen_OF_ManageDrones
    // deplete fuel (as function of velocity/acceleration)
    // print fuel level alerts at 10% steps
    // if 30% fuel or 70% health, force RTB
        // use straight line path
        // don't report which repair/refuel point was selected to the user
        // crash on 0% fuel (and log it)
    // detect current zone
        // count out->in event as 1 violation
        // count in->in event as 1 timescale
        // count out->in and in->out event as 0.5 timescale
        // Spawn AAA in C zone
    // scan for fires
        only spam update fire location when it actually moves
    // deplete sensor health (as function of usage)

////////////////////////////////////////////////
// Refuel/Repair points
////////////////////////////////////////////////
// Data
    // String, id
    // Array, position
    // Scalar, current occupancy
    // Scalar, maximum occupancy

// Zen_OF_InvokeRepairRefuel
// Zen_OF_GetRepairRefuelData
// Zen_OF_UpdateRepairRefuel

////////////////////////////////////////////////
// Fires
////////////////////////////////////////////////
Data
    // string, id
    // array of markers, fire coverage
    array of arrays
        Scalar, X coordinate
        Scalar, Y coordinate
        Scalar, fire temp
        Scalar, burn fraction

// Zen_OF_InvokeFire
// Zen_OF_GetFireData

Zen_OF_EvolveFire
    fire increases its area (creates more coverage markers)
    fire burns within its current area based upon temp and terrain

Zen_OF_FindDistToFire
    generate shortest distances to fire area at discrete angles

Zen_OF_FindFireCrossSection
    Compute the angular sector occupied by the fire in a circular sweep from a point

Zen_OF_ManageFire
    evolve each fire along timescale

////////////////////////////////////////////////
// Airspace Zone
////////////////////////////////////////////////
// Data
    // string, id
    // string, type
    // array of markers, coverage area
    // string, AAA cache id

// Zen_OF_InvokeZone
// Zen_OF_GetZoneData
// Zen_OF_IsInZone
// Zen_OF_UpdateZone
// Zen_OF_SpawnZoneAAA
// Zen_OF_DeleteZoneAAA

////////////////////////////////////////////////
// Drone GUI
////////////////////////////////////////////////

// List of drones
// Sensor health bar
// Fuel bar
// Show drone button
// Order stop button
// Order move button
Recalculate route button
    display total distance, time to travel, time before refuel needed, time to travel to nearest refuel point (from end of route)
    measure average straight path nominal velocity
    average time take to reach shortest straight line path after turn as function of angle between paths
        dot prod of vel w/ direct path to nominal vel
        average dist traveled towards next point as func of time to next point (to check if it passed over)
// Approve route button
// RTB button
// Refresh GUI button
// Close GUI button
// Report fire button
Timer text field for auto-confirm

// Zen_OF_DroneGUIListSelect
// Zen_OF_DroneGUIRefresh
// Zen_OF_DroneGUIInvoke
// Zen_OF_DroneGUIDrawPath
// Zen_OF_DroneGUIStop
// Zen_OF_DroneGUIRTB
// Zen_OF_DroneGUIMove
// Zen_OF_DroneGUIShow
// Zen_OF_DroneGUIRecalc
// Zen_OF_DroneGUIApprove

////////////////////////////////////////////////
// Permission GUI
////////////////////////////////////////////////

New GUI elements
    list of all drones
    list of all A zones
    refresh button
    close button
    show drone button
        same as drone GUI
    show zone button
        opens map and highlights the selected zone
    request permission button
        update permissions for selected drone

////////////////////////////////////////////////
// Global functions
////////////////////////////////////////////////

Zen_OF_ShowPermission
    show permissions GUI

Zen_OF_GenerateFire
    thread for the random starting of fires

////////////////////////////////////////////////
// Changelog
////////////////////////////////////////////////

1. New Function: Zen_OF_FindFire
2. New Function: Zen_OF_GetFireData
3. New Function: Zen_OF_InvokeFire
4. Fixed: Using the drone GUI buttons too soon resulted in an error
5. Added: Drones scan for fires and deplete sensor health
6. Added: Drones GUI report fire button
7. Improved: Drones crash on 0 fuel
8. Documentation: Added for Zen_OF_FindFire, Zen_OF_GetFireData, Zen_OF_InvokeFire
