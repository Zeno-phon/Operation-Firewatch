////////////////////////////////////////////////
// Drones
////////////////////////////////////////////////
// Data
    // String, a unique identifier
    // Object, the in-game object
    // Scalar, sensor health
    // Scalar, fuel remaining
    // Script handle, the current drone order thread
    // Array of strings, zones known to the drone
    // String, marker on drone
    // Array of arrays, path solutions
    // Array of string, path markers
    // Scalar, current path

// Zen_OF_InvokeDrone
// Zen_OF_GetDroneData
// Zen_OF_UpdateDrone
// Zen_OF_OrderDroneExecuteRoute

Zen_OF_FindDroneRoute
    // get end point from user
    apply Dijkstra's algorithm (https://en.wikipedia.org/wiki/Dijkstra%27s_algorithm)
    use dynamic graph generated in X/Y steps with weighted mult on the distance for ABC zones
    define a tolerance and keep multiple solutions

Zen_OF_FindFire
    use fire object geometry to evaluate probability of detection

Zen_OF_ManageDrones
    // deplete fuel (as function of velocity/acceleration)
    // print fuel level alerts at 10% steps
    // if 30% fuel or 70% health, force RTB
        // use straight line path
        // don't report which repair/refuel point was selected to the user
    // detect current zone
        // count out->in event as 1 violation
        // count in->in event as 1 timescale
        // count out->in and in->out event as 0.5 timescale
        // Spawn AAA in C zone
    scan for fires
    deplete sensor health (as function of usage)

////////////////////////////////////////////////
// Refuel/Repair points
////////////////////////////////////////////////
// Data
    // String, id
    // Array, position
    // Scalar, current occupancy
    // Scalar, maximum occupancy

// Zen_OF_InvokeRepairRefuel
// Zen_OF_GetRepairRefuelData
// Zen_OF_UpdateRepairRefuel

////////////////////////////////////////////////
// Fires
////////////////////////////////////////////////
Data
    string, id
    array of markers, fire coverage
    array of arrays
        Scalar, X coordinate
        Scalar, Y coordinate
        Scalar, fire temp
        Scalar, burn fraction

Zen_OF_InvokeFire
    create a new fire area

Zen_OF_EvolveFire
    fire increases its area (creates more coverage markers)
    fire burns within its current area based upon temp and terrain

Zen_OF_FindDistToFire
    generate shortest distances to fire area at discrete angles

Zen_OF_FindFireCrossSection
    Compute the angular sector occupied by the fire in a circular sweep from a point

Zen_OF_ManageFire
    evolve each fire along timescale

////////////////////////////////////////////////
// Airspace Zone
////////////////////////////////////////////////
// Data
    // string, id
    // string, type
    // array of markers, coverage area
    // string, AAA cache id

// Zen_OF_InvokeZone
// Zen_OF_GetZoneData
// Zen_OF_IsInZone
// Zen_OF_UpdateZone
// Zen_OF_SpawnZoneAAA
// Zen_OF_DeleteZoneAAA

////////////////////////////////////////////////
// Drone GUI
////////////////////////////////////////////////

// List of drones
// Sensor health bar
// Fuel bar
// Show drone button
// Order stop button
// Order move button
// Recalculate route button
// Approve route button
// RTB button
// Refresh GUI button
// Close GUI button
Timer text field for auto-confirm
Report fire button

// Zen_OF_DroneGUIListSelect
// Zen_OF_DroneGUIRefresh
// Zen_OF_DroneGUIInvoke
// Zen_OF_DroneGUIDrawPath
// Zen_OF_DroneGUIStop
// Zen_OF_DroneGUIRTB
// Zen_OF_DroneGUIMove
// Zen_OF_DroneGUIShow
// Zen_OF_DroneGUIRecalc
// Zen_OF_DroneGUIApprove

////////////////////////////////////////////////
// Permission GUI
////////////////////////////////////////////////

New GUI elements
    list of all drones
    list of all A zones
    refresh button
    close button
    show drone button
        same as drone GUI
    show zone button
        opens map and highlights the selected zone
    request permission button
        update permissions for selected drone

////////////////////////////////////////////////
// Global functions
////////////////////////////////////////////////

Zen_OF_ShowPermission
    show permissions GUI

Zen_OF_GenerateFire
    thread for the random starting of fires

////////////////////////////////////////////////
// Changelog
////////////////////////////////////////////////

 1. New Function: Zen_OF_DeleteDrone
 2. New Function: Zen_OF_GenerateZoneHeuristic
 3. New Function: Zen_OF_ManageDrones
 4. Fixed: Several subsystem data functions did not remove themselves from the stack when exiting on a missing identifier error
 5. Added: Logging for drones entering airspace zones
 6. Added: Depletion of drone fuel based upon drone movement
 7. Added: Drone death is handled
 8. Added: Drone fuel alerts print to user
 9. Added: Drone forced RTB at 30/70% fuel/health; also disables drone GUI orders
10. Added: Zones now cache their AAA when no drone is over them
